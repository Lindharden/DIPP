#!/bin/bash

modules=(1 2 4 8 16 32 64 128) # Amount of modules
sizes=(1 2 4 8 16 32 64 128 256 512) # Image sizes
reps=${1:-50} # Default to 50 unless provided as argument

# LATENCY / THROUGHPUT EXPERIMENTS
echo "Running latency/throughput experiments"
echo "modules size latency(ms) throughput(MB/sec)" > "dipp_time_experiment.txt"
stdbuf -oL dipp -i CAN -p can0 -a 162 -q >> "dipp_time_experiment.txt" &
dipp_process=$!

for module in "${modules[@]}"; do
    echo "Executing with $module modules"
    for size in "${sizes[@]}"; do
        test_cam $size $reps $module
    done
done

sleep 120 # sleep to ensure dipp processes the entire queue before killing
kill $dipp_process >/dev/null 2>&1

# PERF EXPERIMENTS
echo "Running perf experiments"
echo "modules size rep cache-misses cache-references context-switches cpu-cycles instructions" > "dipp_perf_experiment.txt"
for module in "${modules[@]}"; do
    echo "Executing with $module modules"
    for size in "${sizes[@]}"; do
        for i in $(seq 1 $reps); do 
            test_cam $size 1 $module
            perf stat -e cache-misses,cache-references,context-switches,cpu-cycles,instructions dipp -i CAN -p can0 -a 162 > "dipp_perf_result.txt" 2>&1

            perf_stats=($(grep -E 'cache-misses|cache-references|context-switches|cpu-cycles|instructions' "dipp_perf_result.txt" | awk '{gsub(",", ""); print $1}'))
            result="$module $size $i "

            for (( i = 0; i < 5; i++ )); do
                res=$((perf_stats[i]))
                result+=$(printf "%'d" "$res")" "
            done

            echo "${result% }" >> dipp_perf_experiment.txt  # Remove trailing space and print
        done
    done
done

rm "dipp_perf_result.txt"

# MEMORY EXPERIMENTS
echo "Running memory experiments"
echo "modules size rep peak_memory" > "dipp_memory_experiment.txt"
for module in "${modules[@]}"; do
    echo "Executing with $module modules"
    for size in "${sizes[@]}"; do
        for i in $(seq 1 $reps); do 
            test_cam $size 1 $module
            peak_memory=$(/usr/bin/time -f "%M" dipp -i CAN -p can0 -a 162 2>&1 | tail -n 1)
            echo "$module $size $i $peak_memory" >> dipp_memory_experiment.txt  # Remove trailing space and print
        done
    done
done
